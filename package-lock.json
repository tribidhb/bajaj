// index.js
const express = require("express");
const cors = require("cors");
const dotenv = require("dotenv");
const app = express();

dotenv.config();
app.use(express.json());
app.use(cors());

// Health Check Endpoint
app.get("/", (req, res) => {
  res.status(200).send("Server is running successfully!");
});

// Main API Endpoint
app.route("/bfhl")
  .get((req, res) => {
    res.status(200).json({ operation_code: 1 });
  })
  .post((req, res) => {
    const inputData = req.body.data || [];
    const numericValues = [];
    const alphabeticValues = [];
    let topAlphabet = "";

    for (const element of inputData) {
      if (!isNaN(element)) {
        numericValues.push(element);
      } else if (element.length === 1 && isNaN(element)) {
        alphabeticValues.push(element);
        if (!topAlphabet || element.toUpperCase() > topAlphabet.toUpperCase()) {
          topAlphabet = element;
        }
      }
    }

    res.json({
      is_success: true,
      user_id: "tribidh_bhagat_21022025",
      email: "tribidh.bhagat@example.com",
      roll_number: "CU123456",
      numbers: numericValues,
      alphabets: alphabeticValues,
      highest_alphabet: topAlphabet ? [topAlphabet] : [],
    });
  });

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});

// package.json
{
  "name": "bfhl-tribidh",
  "version": "1.0.2",
  "description": "A fully functional REST API for Bajaj Finserv Health Challenge by Tribidh Bhagat.",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": ["REST API", "Bajaj Finserv", "Challenge", "Tribidh Bhagat"],
  "author": "Tribidh Bhagat",
  "license": "ISC",
  "dependencies": {
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "body-parser": "^1.20.1",
    "dotenv": "^16.0.3"
  },
  "devDependencies": {
    "nodemon": "^2.0.22"
  },
  "engines": {
    "node": ">=14.0.0"
  }
}
